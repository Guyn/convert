// This file is automatically generated. Please do not edit this file, changes will be overwritten by a next build.

export const colors = {
	hex: { 
	<% var i=0; Object.keys(colors).forEach(function(color){ i++; -%>
		<%= _.PascalCase(colors[color].name) %>: "<%= colors[color].hex %>"<% if (i < Object.keys(colors).length){ %>,<% } -%> 
	<% }); -%>
	},
<% if(settings.hsl) { -%>     hsl: { 
	<% var i=0; Object.keys(colors).forEach(function(color){ i++; -%>
		<%= _.PascalCase(colors[color].name) %>: [<%= _.toRoundNumber(colors[color].hsl.h) %>, <%= _.toRoundNumber(colors[color].hsl.s) %>, <%= _.toRoundNumber(colors[color].hsl.l) %>]<% if (i < Object.keys(colors).length){ %>,<% } %> 
	<% }); %>
	},<% } %>
<% if(settings.rgb) { -%>     rgb: { 
	<% var i=0; Object.keys(colors).forEach(function(color){ i++; -%>
		<%= _.PascalCase(colors[color].name) %>: [<%= colors[color].rgb.r %>,  <%= colors[color].rgb.g %>, <%= colors[color].rgb.b %>]<% if (i < Object.keys(colors).length){ %>,<% } %> 
	<% }); %><% } %>
	}
}


export const color = (color, type = "hex") => {
	switch (type) {
		case "hex":
			if (colors.hex[color]) return colors.hex[color];
			else return null;
		case "hsl":
			if (colors.hsl[color]) return colors.hsl[color];
			else return null;
		case "rgb":
			if (colors.rgb[color]) return colors.rgb[color];
			else return null;
		default:
			if (colors.hex[color]) return colors.hex[color];
			else return null;
	}
};

export const rgb = (color, alpha = 1) => {
	if (colors.rgb[color])
		return `rgba(${colors.rgb[rgb].r},${colors.rgb[rgb].g},${colors.rgb[rgb].b},alpha)`;
	else return null;
};
export const hsl = (color, alpha = 1) => {
	if (colors.rgb[color])
		return `rgba(${colors.hsl[rgb].r},${colors.hsl[rgb].g},${colors.hsl[rgb].b},alpha)`;
	else return null;
};
